---
layout: post
title:  "git 시작하기"
date:   2020-01-22 21:00
categories: git linux
---
git 시작하기

## GIT으로 할 수 있는 일

### 1\. 버전 관리 (Version Control)

  깃은 문서를 수정할 때마다 언제 수정했는지, 어떤 것을 변경했는지 편하고 구체적으로 기록하기 위한 버전 관리 시스템입니다.

### 2\. 백업하기 (Backup)

  내 컴퓨터가 언제 고장 날지 모르기 때문에 현재 컴퓨터에 있는 자료를 백업 공간에 저장해두어야 합니다. 이곳을 깃의 원격 저장소(온라인 저장소)라고 하는데 가장 많이 쓰이는 것이 깃허브(GitHub)입니다.

### 3\. 협업하기 (Collaboration)

 깃을 사용하면 팀원들이 파일을 편하게 주고받으면서 일할 수 있습니다. 또한 누가 어느 부분을 어떻게 수정했는지 기록에 남기 때문에 나중에 오류가 생겼을 때도 파악하기 쉽습니다.

---

## GIT 설치하기 (Windows)

  [https://git-scm.com](https://git-scm.com) 사이트에서 \[Download 2.2x.x for Windows\]를 클릭하면 깃을 내려받을 수 있습니다. 


  깃 설치가 완료되면 깃 배시(Git Bash)가 함께 설치되는데 여기서 리눅스 명령을 사용할 수 있습니다.

윈도우 작업 표시줄의 검색 창을 통해 Git Bash 창을 열어봅니다. 여기서 git이라고 입력하고 Enter키를 눌러서 다음과 같이 표시된다면 깃이 제대로 설치된 것입니다.


---

## 리눅스 명령 연습하기

### 1\. 현재 디렉터리 살펴보기

01\. 깃 배시를 실행한 후 커서 윗줄을 보면 맨 끝에 물결 표시(~)가 있습니다. 나는 현재 홈 디렉터리(home directory)에 있다는 의미입니다.

02\. pwd를 입력하고 Enter키를 누르면 현재 위치의 경호가 나타납니다.

03\. ls 명령을 입력하면 Enter키를 누르면 현재 디렉터리에 어떤 파일과 어떤 디렉터리가 있는지 확인할 수 있습니다. 이름 뒤에 슬래시(/)가 붙어 있는 것이 디렉터리입니다.

04\. 리눅스 명령에 옵션(Option)을 추가하려면 붙임표(-)와 원하는 옵션을 함께 입력하면 됩니다. ex) ls -la (옵션은 순서에 상관없으므로 ls -al과 동일한 출력을 보입니다.)

<table style="border-collapse: collapse; width: 100%; height: 100px;" border="1" data-ke-style="style1"><tbody><tr style="height: 20px;"><td style="width: 50%; height: 20px; text-align: center;">옵션</td><td style="width: 50%; height: 20px; text-align: center;">설명</td></tr><tr style="height: 20px;"><td style="width: 50%; height: 20px; text-align: center;">-a</td><td style="width: 50%; height: 20px; text-align: center;">숨김 파일과 디렉터리도 함께 표시합니다.</td></tr><tr style="height: 20px;"><td style="width: 50%; height: 20px; text-align: center;">-l</td><td style="width: 50%; height: 20px; text-align: center;">파일이나 디렉터리의 상세 정보를 함께 표시합니다.</td></tr><tr style="height: 20px;"><td style="width: 50%; height: 20px; text-align: center;">-r</td><td style="width: 50%; height: 20px; text-align: center;">파일의 정렬 순서를 거꾸로 표시합니다.</td></tr><tr style="height: 20px;"><td style="width: 50%; height: 20px; text-align: center;">-t</td><td style="width: 50%; height: 20px; text-align: center;">파일 작성 시간 순으로 (내림차순) 표시합니다.</td></tr></tbody></table>



### 2\. 터미널 창에서 디렉터리 이동, 생성 및 삭제

 디렉터리 사이를 이동할 때는 cd 명령을 사용합니다. (cd : change directory)

01\. 상위 디렉터리로 이동 : cd ..

02\. 하위 디렉터리(Users)로 이동: ls 명령을 하면 하위 디렉터리들의 이름을 볼 수 있으므로 이를 통해 디렉터리를 이동해줍니다. cd 김리나

03\. 홈 디렉터리로 이동: cd ~

04\. 디렉터리 생성: mkdir test를 입력하면 test라는 디렉터리를 생성합니다.

05\. 디렉터리 삭제: rm -r test를 입력하면 test 디렉터리를 삭제합니다. (디렉터리가 비어있지 않으면 rm 명령어만으로는 디렉터리를 삭제할 수 없기 때문에 -r 옵션을 통해 디렉터리 안에 있는 하위 디렉터리와 파일까지 다 같이 삭제할 수 있습니다.


### 3\. Vim에서 텍스트 문서 만들기

  리눅스의 기본 편집기인 빔(Vim)은 터미널에서 사용할 수 있는 대표적인 편집기입니다.

01\. vim 명령을 통해 vim test.txt라고 입력을 하면 test.txt 파일이 있을 시에는 그 파일을 열고 파일이 없을 시에는 새로 만들어집니다.

02\. 빔에는 두 가지 모드가 있습니다. '입력 모드'와 'ex 모드'인데 입력 모드에서는 문서에서 텍스트를 입력 또는 수정할 수 있고 ex 모드에서는 문서를 저장하거나 종료할 수 있습니다.

03\. 빔은 처음에 ex 모드이므로 i키나 a키를 눌러야 입력 모드로 전환되어 텍스트를 입력할 수 있습니다.

04\. 텍스트 입력이 끝나면 파일을 저장해야 합니다. 그러면 다시 ex 모드로 돌아가야 하는데 Esc키를 누르면 ex 모드로 돌아갈 수 있습니다. 그리고 :wq를 입력하고 Enter키를 누르면 저장 후 종료를 할 수 있습니다. (w는 저장, q는 종료를 실행하는 명령입니다.)

<table style="border-collapse: collapse; width: 100%; height: 100px;" border="1" data-ke-style="style1"><tbody><tr style="height: 20px;"><td style="width: 50%; text-align: center; height: 20px;">명령</td><td style="width: 50%; text-align: center; height: 20px;">설명</td></tr><tr style="height: 20px;"><td style="width: 50%; text-align: center; height: 20px;">:w 또는 :write</td><td style="width: 50%; text-align: center; height: 20px;">편집 중이던 문서를 저장합니다.</td></tr><tr style="height: 20px;"><td style="width: 50%; text-align: center; height: 20px;">:q 또는 :quit</td><td style="width: 50%; text-align: center; height: 20px;">편집기를 종료합니다.</td></tr><tr style="height: 20px;"><td style="width: 50%; text-align: center; height: 20px;">:wq (파일)</td><td style="width: 50%; text-align: center; height: 20px;">편집 중이던 문서를 저장하고 종료합니다. 파일 이름을 함께 입력하면 그 이름으로 저장합니다.</td></tr><tr style="height: 20px;"><td style="width: 50%; text-align: center; height: 20px;">:q!</td><td style="width: 50%; text-align: center; height: 20px;">문서를 저장하지 않고 편집기를 종료합니다. 확장자가 .swp인 임시 파일이 생깁니다.</td></tr></tbody></table>



05\. 텍스트 문서 내용을 확인하려면 cat 명령을 이용하면 됩니다. cat test.txt 라고 입력하면 앞에서 작성했던 test.txt 파일의 내용이 터미널 창에 나타납니다.

<table style="border-collapse: collapse; width: 100%; height: 70px;" border="1" data-ke-style="style1"><tbody><tr style="height: 10px;"><td style="width: 50%; height: 10px; text-align: center;">명령</td><td style="width: 50%; height: 10px; text-align: center;">설명</td></tr><tr style="height: 20px;"><td style="width: 50%; height: 20px; text-align: center;">$ cat 파일</td><td style="width: 50%; height: 20px; text-align: center;">파일의 내용을 화면에 표시합니다.</td></tr><tr style="height: 20px;"><td style="width: 50%; height: 20px; text-align: center;">$ cat 파일1, 파일2 ··· 파일n &gt; 새파일</td><td style="width: 50%; height: 20px; text-align: center;">파일 n개를 차례로 연결해서 새로운 파일을 만듭니다.</td></tr><tr style="height: 20px;"><td style="width: 50%; height: 20px; text-align: center;">$ cat 파일1 &gt;&gt; 파일2</td><td style="width: 50%; height: 20px; text-align: center;">파일1의 내용을 파일2 끝에 연결합니다.</td></tr></tbody></table>

